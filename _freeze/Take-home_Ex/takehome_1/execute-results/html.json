{
  "hash": "81471d7599b9d1a40a25e79b40317a5b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1\"\nauthor: \"Javier Lian\"\nexecute: \n  freeze: true\n---\n\n\n## Introduction\n\nMillions of people have their lives shattered by armed conflict – wars – every year.\n\nArmed conflict has been on the rise since about 2012, after a decline in the 1990s and early 2000s. First came conflicts in Libya, Syria and Yemen, triggered by the 2011 Arab uprisings. Libya’s instability spilled south, helping set off a protracted crisis in the Sahel region. A fresh wave of major combat followed: the 2020 Azerbaijani-Armenian war over the Nagorno-Karabakh enclave, horrific fighting in Ethiopia’s northern Tigray region that began weeks later, the conflict prompted by the Myanmar army’s 2021 power grab and Russia’s 2022 assault on Ukraine. Add to those 2023’s devastation in Sudan and Gaza. Around the globe, more people are dying in fighting, being forced from their homes or in need of life-saving aid than in decades.\n\n## The Objectives\n\n-   Gain a better insight of the safety of civilians in Myanmar by knowing which hour of the day is dangerous to be outside\n\n## **The Data**\n\n### **Armed conflict data**\n\nFor the purpose of this assignment, armed conflict data of Myanmar between 2021-2024 from [Armed Conflict Location & Event Data (ACLED)](https://acleddata.com/), an independent, impartial, international non-profit organization collecting data on violent conflict and protest in all countries and territories in the world, should be used.\n\nIn terms of event types, students should focus on at least four main event types, namely: Battles, Explosions/Remote Violence, Strategic developments, and Violence against civilians.\n\nIn terms of study period, students should focus on quarterly armed conflict events from January 2021 until June 2024.\n\n### **GIS Data**\n\n-   [Geospatial data](http://geonode.themimu.info/layers/?limit=100&offset=0) on [Myanmar Information Management Unit, MIMU](http://www.themimu.info/)\n\n## **Installing and Loading the R packages**\n\nIn this hands-on exercise, five R packages will be used, they are:\n\n-   [**sf**](https://r-spatial.github.io/sf/), a relatively new R package specially designed to import, manage and process vector-based geospatial data in R.\n\n-   [**spatstat**](https://spatstat.org/), which has a wide range of useful functions for point pattern analysis. In this hands-on exercise, it will be used to perform 1st- and 2nd-order spatial point patterns analysis and derive kernel density estimation (KDE) layer.\n\n-   [**sparr**](https://tilmandavies.github.io/sparr/index.html), provides functions to estimate fixed and adaptive kernel-smoothed spatial relative risk surfaces via the density-ratio method and perform subsequent inference. Fixed-bandwidth spatiotemporal density and relative risk estimation is also supported.\n\n-   [**raster**](https://cran.r-project.org/web/packages/raster/) which reads, writes, manipulates, analyses and model of gridded spatial data (i.e. raster). In this hands-on exercise, it will be used to convert image output generate by spatstat into raster format.\n\n-   [**maptools**](https://cran.r-project.org/web/packages/maptools/index.html) which provides a set of tools for manipulating geographic data. In this hands-on exercise, we mainly use it to convert *Spatial* objects into *ppp* format of **spatstat**.\n\n-   [**tmap**](https://cran.r-project.org/web/packages/tmap/index.html) which provides functions for plotting cartographic quality static point patterns maps or interactive maps by using [leaflet](https://leafletjs.com/) API.\n\nUse the code chunk below to install and launch the five R packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, raster, spatstat, sparr, tmap, tidyverse)\n```\n:::\n\n\n## Importing Spatial Data File\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled <- readr::read_csv(\"data/aspatial/ACLED_Myanmar.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 51553 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): event_id_cnty, event_date, disorder_type, event_type, sub_event_ty...\ndbl (11): year, time_precision, inter1, inter2, interaction, iso, latitude, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n## Importing Geospatial Data Files\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_adm1_sf <- st_read(\n  dsn = \"data/geospatial/admin1\",\n  layer = \"mmr_polbnda_adm1_250k_mimu_1\"\n) %>%\n  st_transform(crs = 32647)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `mmr_polbnda_adm1_250k_mimu_1' from data source \n  `C:\\javilian98\\IS415-GAA\\Take-home_Ex\\data\\geospatial\\admin1' \n  using driver `ESRI Shapefile'\nSimple feature collection with 15 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.1721 ymin: 9.696844 xmax: 101.17 ymax: 28.54554\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n## Constant Variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Constants\n# Define a named vector for event types\nevent_types <- c(\n  \"VIOLENCE_CIVILIANS\" = \"Violence against civilians\",\n  \"BATTLES\" = \"Battles\",\n  \"STRAT_DEVS\" = \"Strategic developments\",\n  \"EXPLOSIONS_REMOTE_VIOLENCE\" = \"Explosions/Remote violence\"\n)\n\n# List of years and quarters\nCONST_YEARS <- 2021:2024\nCONST_QUARTERS <- 1:4\n```\n:::\n\n\n## Geospatial Data wrangling\n\n### Inspecting columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(acled)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"event_id_cnty\"      \"event_date\"         \"year\"              \n [4] \"time_precision\"     \"disorder_type\"      \"event_type\"        \n [7] \"sub_event_type\"     \"actor1\"             \"assoc_actor_1\"     \n[10] \"inter1\"             \"actor2\"             \"assoc_actor_2\"     \n[13] \"inter2\"             \"interaction\"        \"civilian_targeting\"\n[16] \"iso\"                \"region\"             \"country\"           \n[19] \"admin1\"             \"admin2\"             \"admin3\"            \n[22] \"location\"           \"latitude\"           \"longitude\"         \n[25] \"geo_precision\"      \"source\"             \"source_scale\"      \n[28] \"notes\"              \"fatalities\"         \"tags\"              \n[31] \"timestamp\"         \n```\n\n\n:::\n\n```{.r .cell-code}\nncol(acled)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 31\n```\n\n\n:::\n:::\n\n\n### Dropping unused columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled <- acled %>%\n  select(-iso, -region, -country, -notes, -time_precision)\n```\n:::\n\n\nInspecting columns again\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(acled)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"event_id_cnty\"      \"event_date\"         \"year\"              \n [4] \"disorder_type\"      \"event_type\"         \"sub_event_type\"    \n [7] \"actor1\"             \"assoc_actor_1\"      \"inter1\"            \n[10] \"actor2\"             \"assoc_actor_2\"      \"inter2\"            \n[13] \"interaction\"        \"civilian_targeting\" \"admin1\"            \n[16] \"admin2\"             \"admin3\"             \"location\"          \n[19] \"latitude\"           \"longitude\"          \"geo_precision\"     \n[22] \"source\"             \"source_scale\"       \"fatalities\"        \n[25] \"tags\"               \"timestamp\"         \n```\n\n\n:::\n\n```{.r .cell-code}\nncol(acled)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 26\n```\n\n\n:::\n:::\n\n\n### Converting timezone to Yangon, Myanmar\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled$timestamp <- as_datetime(acled$timestamp, tz = \"Asia/Yangon\")\n```\n:::\n\n\nExtract the Hour, Minutes and Seconds into their new respective columns from the timestamp column to be used later.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled <- acled %>%\n  mutate(\n    Hour = hour(timestamp),\n    Minutes = minute(timestamp),\n    Seconds = second(timestamp)\n  )\n```\n:::\n\n\nNow we are going to convert the longitude and latitude to CRS system of Myanmar, and extract the month number to a new Month_num column. Likewise for quarter number into Quarter_num column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled_sf <- acled %>%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %>%\n  st_transform(crs = 32647) %>%\n  mutate(\n    event_date = dmy(event_date),\n    Month_num = month(event_date),\n    Quarter_num = quarter(event_date)\n  )\n```\n:::\n\n\n### Organising Data: Split data into years and quarters\n\nSeparate data into years 2021-2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled_sf_2021 <- acled_sf %>%\n  filter(year == 2021)\n\nacled_sf_2022 <- acled_sf %>%\n  filter(year == 2022)\n\nacled_sf_2023 <- acled_sf %>%\n  filter(year == 2023)\n\nacled_sf_2024 <- acled_sf %>%\n  filter(year == 2024)\n```\n:::\n\n\nSeparate data from each year to quarters Q1-Q4\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled_sf_2021_q1 <- acled_sf_2021 %>%\n  filter(quarters(event_date) == \"Q1\")\nacled_sf_2021_q2 <- acled_sf_2021 %>%\n  filter(quarters(event_date) == \"Q2\")\nacled_sf_2021_q3 <- acled_sf_2021 %>%\n  filter(quarters(event_date) == \"Q3\")\nacled_sf_2021_q4 <- acled_sf_2021 %>%\n  filter(quarters(event_date) == \"Q4\")\n\nacled_sf_2022_q1 <- acled_sf_2022 %>%\n  filter(quarters(event_date) == \"Q1\")\nacled_sf_2022_q2 <- acled_sf_2022 %>%\n  filter(quarters(event_date) == \"Q2\")\nacled_sf_2022_q3 <- acled_sf_2022 %>%\n  filter(quarters(event_date) == \"Q3\")\nacled_sf_2022_q4 <- acled_sf_2022 %>%\n  filter(quarters(event_date) == \"Q4\")\n\nacled_sf_2023_q1 <- acled_sf_2023 %>%\n  filter(quarters(event_date) == \"Q1\")\nacled_sf_2023_q2 <- acled_sf_2023 %>%\n  filter(quarters(event_date) == \"Q2\")\nacled_sf_2023_q3 <- acled_sf_2023 %>%\n  filter(quarters(event_date) == \"Q3\")\nacled_sf_2023_q4 <- acled_sf_2023 %>%\n  filter(quarters(event_date) == \"Q4\")\n\nacled_sf_2024_q1 <- acled_sf_2024 %>%\n  filter(quarters(event_date) == \"Q1\")\nacled_sf_2024_q2 <- acled_sf_2024 %>%\n  filter(quarters(event_date) == \"Q2\")\n```\n:::\n\n\n### Divde data based on event types\n\n#### Helper function to derive data based on our types.\n\nGiven the nature of the task which is to study each event data per quarter of each year, there will be a lot of repetitive codes by the end of this exercise. So the benefits it provides is an organised and reusable piece of code snippet that allows you to apply to other sets of data by changing certain arguments.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Helper functions\nget_quarter_data_from_event_type <- function(data, event_type_arg) {\n  # Filter the data based on the specified event_type\n  filtered_data <- data %>%\n    group_by(admin1) %>%\n    filter(event_type == event_type_arg) %>%\n    select(Quarter_num) %>%\n  \n  # Return the filtered data\n  return(filtered_data)\n}\n\npopulate_quarter_data_from_event_type <- function(event_type, data_list_name, years, quarters) {\n  # Initialize an empty list to store the results\n  event_data_list <- list()\n  \n  # Loop over the years and quarters to populate the list\n  for (year in years) {\n    for (quarter in quarters) {\n      if (year == 2024 && quarter > 2) next  # Skip quarters beyond Q2 for 2024\n      \n      # Construct the variable name dynamically\n      var_name <- paste0(year, \"_q\", quarter)\n      data_var_name <- paste0(\"acled_sf_\", year, \"_q\", quarter)\n      \n      # Get the event type data and store it in the list\n      event_data_list[[var_name]] <- get_quarter_data_from_event_type(\n        get(data_var_name),\n        event_type\n      )\n    }\n  }\n  \n  # Assign the populated list to the specified list name\n  assign(data_list_name, event_data_list, envir = .GlobalEnv)\n}\n```\n:::\n\n\nNow with the help of the helper functions created, we are going to get all the the four event type data separated by quarters of each year.\n\n::: panel-tabset\n### Violence Against Civilians\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopulate_quarter_data_from_event_type(\n  event_types[\"VIOLENCE_CIVILIANS\"], \n  \"violence_civilians_sf\",\n  CONST_YEARS, \n  CONST_QUARTERS\n)\n```\n:::\n\n\n### Explosions/Remote Violence\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopulate_quarter_data_from_event_type(\n  event_types[\"EXPLOSIONS_REMOTE_VIOLENCE\"], \n  \"explosions_remote_violence_sf\",\n  CONST_YEARS, \n  CONST_QUARTERS\n)\n```\n:::\n\n\n### Strategic Developments\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopulate_quarter_data_from_event_type(\n  event_types[\"STRAT_DEVS\"], \n  \"strat_devs_sf\",\n  CONST_YEARS, \n  CONST_QUARTERS\n)\n```\n:::\n\n\n### Battles\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopulate_quarter_data_from_event_type(\n  event_types[\"BATTLES\"], \n  \"battles_sf\",\n  CONST_YEARS, \n  CONST_QUARTERS\n)\n```\n:::\n\n:::\n\n### Converting sf format into spatstat’s ppp format\n\nspatstat requires the analytical data in ppp object form. We will write a helper function to convert each list of data from event types to PPP format.\n\n#### Helper functions to converrt sf to ppp\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconvert_to_ppp <- function(data_list_name, sf_list, years, quarters) {\n  # Initialize an empty list to store the results\n  event_data_list <- list()\n  \n  # Loop over the years and quarters to populate the list\n  for (year in years) {\n    for (quarter in quarters) {\n      if (year == 2024 && quarter > 2) next  # Skip quarters beyond Q2 for 2024\n      \n      # Construct the variable name dynamically\n      var_name <- paste0(year, \"_q\", quarter)\n      \n      # Get the event type data and store it in the list\n      event_data_list[[var_name]] <- as.ppp(sf_list[[var_name]])\n    }\n  }\n  \n  # Assign the populated list to the specified list name\n  assign(data_list_name, event_data_list, envir = .GlobalEnv)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nconvert_to_ppp(\"violence_civilians_ppp\", violence_civilians_sf, CONST_YEARS, CONST_QUARTERS)\nconvert_to_ppp(\"explosions_remote_violence_ppp\", explosions_remote_violence_sf, CONST_YEARS, CONST_QUARTERS)\nconvert_to_ppp(\"strat_devs_ppp\", strat_devs_sf, CONST_YEARS, CONST_QUARTERS)\nconvert_to_ppp(\"battles_ppp\", battles_sf, CONST_YEARS, CONST_QUARTERS)\n```\n:::\n\n\nNow, let us plot and have a look at the data of Q1 2021 from the list violence_civilians_ppp.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(violence_civilians_ppp[[\"2021_q1\"]])\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(violence_civilians_ppp[[\"2021_q1\"]])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern:  147 points\nAverage intensity 1.609184e-10 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 13 decimal places\n\nmarks are numeric, of type 'integer'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      1       1       1       1       1       1 \n\nWindow: rectangle = [-180845.7, 456560.5] x [1375186.1, 2808348.1] units\n                    (637400 x 1433000 units)\nWindow area = 9.13506e+11 square units\n```\n\n\n:::\n:::\n\n\nNotice the warning message about duplicates. In spatial point patterns analysis an issue of significant is the presence of duplicates. The statistical methodology used for spatial point patterns processes is based largely on the assumption that process are simple, that is, that the points cannot be coincident.\n\n### Evaluate duplicate points\n\nWe can check the duplication in a ppp object by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_ppp[[\"2021_q1\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n### Removing duplicated points\n\nWe will use jitterirng to curb the duplicates for all the data.\n\n#### Helper function to remove duplicates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nremove_duplicates <- function(data_list_name, ppp_list, years, quarters) {\n  # Initialize an empty list to store the results\n  event_data_list <- list()\n  \n  # Loop over the years and quarters to populate the list\n  for (year in years) {\n    for (quarter in quarters) {\n      if (year == 2024 && quarter > 2) next  # Skip quarters beyond Q2 for 2024\n      \n      # Construct the variable name dynamically\n      var_name <- paste0(year, \"_q\", quarter)\n      \n      # Get the event type data and store it in the list\n      event_data_list[[var_name]] <- rjitter(ppp_list[[var_name]], retry=TRUE, nsim=1, drop=TRUE)\n    }\n  }\n  \n  # Assign the populated list to the specified list name\n  assign(data_list_name, event_data_list, envir = .GlobalEnv)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nremove_duplicates(\"violence_civilians_ppp\", violence_civilians_ppp, CONST_YEARS, CONST_QUARTERS)\nremove_duplicates(\"explosions_remote_violence_ppp\", explosions_remote_violence_ppp, CONST_YEARS, CONST_QUARTERS)\nremove_duplicates(\"strat_devs_ppp\", strat_devs_ppp, CONST_YEARS, CONST_QUARTERS)\nremove_duplicates(\"battles_ppp\", battles_ppp, CONST_YEARS, CONST_QUARTERS)\n```\n:::\n\n\n### Evaluate duplicate points again\n\nWe have removed all the duplicates as you can see from the output below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_ppp[[\"2021_q1\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n### Creating *owin* object\n\nWhen analysing spatial point patterns, it is a good practice to confine the analysis with a geographical area like Mynanmar boundary. In spatstat, an object called owin is specially designed to represent this polygonal region.\n\nThe code chunk below is used to convert the SpatialPolygon object into owin object of spatstat.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_adm1_owin <- as.owin(mpsz_adm1_sf)\nmpsz_adm1_owin\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nwindow: polygonal boundary\nenclosing rectangle: [-210008.6, 724647.6] x [1072026.3, 3158467.1] units\n```\n\n\n:::\n:::\n\n\n### Combining point events object and owin object\n\n#### Helper functions for combining ppp obj with owin obj, and plotting them.\n\nIn this last step of geospatial data wrangling, we will combine the owin object with the PPP list of data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombine_ppp_with_owin <- function(data_list_name, ppp_list, owin_obj, years, quarters) {\n  # Initialize an empty list to store the results\n  event_data_list <- list()\n  \n  # Loop over the years and quarters to populate the list\n  for (year in years) {\n    for (quarter in quarters) {\n      if (year == 2024 && quarter > 2) next  # Skip quarters beyond Q2 for 2024\n      \n      # Construct the variable name dynamically\n      var_name <- paste0(year, \"_q\", quarter)\n      \n      # Get the event type data and store it in the list\n      event_data_list[[var_name]] <- ppp_list[[var_name]][owin_obj]\n    }\n  }\n  \n  # Assign the populated list to the specified list name\n  assign(data_list_name, event_data_list, envir = .GlobalEnv)\n}\n\n# Helper function to plot the list of  data\n\nhelper_func_plot_list <- function(kde_list) {\n  for (name in names(kde_list)) {\n    plot(kde_list[[name]], main = name)\n  }\n}\n```\n:::\n\n\n::: panel-tabset\n### Violence Against Civilians\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombine_ppp_with_owin(\"violence_civilians_ppp\", violence_civilians_ppp, mpsz_adm1_owin, CONST_YEARS, CONST_QUARTERS)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_list(violence_civilians_ppp)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-29-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-29-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-29-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-29-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-29-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-29-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-29-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-29-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-29-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-29-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-29-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-29-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-29-14.png){width=672}\n:::\n:::\n\n\n### Explosions/Remote Violence\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombine_ppp_with_owin(\n  \"explosions_remote_violence_ppp\", \n  explosions_remote_violence_ppp, \n  mpsz_adm1_owin, \n  CONST_YEARS, \n  CONST_QUARTERS\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_list(explosions_remote_violence_ppp)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-31-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-31-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-31-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-31-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-31-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-31-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-31-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-31-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-31-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-31-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-31-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-31-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-31-14.png){width=672}\n:::\n:::\n\n:::\n\n### Strategic Developments\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombine_ppp_with_owin(\"strat_devs_ppp\", strat_devs_ppp, mpsz_adm1_owin, CONST_YEARS, CONST_QUARTERS)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_list(strat_devs_ppp)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-33-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-33-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-33-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-33-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-33-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-33-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-33-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-33-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-33-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-33-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-33-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-33-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-33-14.png){width=672}\n:::\n:::\n\n\n### Battles\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombine_ppp_with_owin(\"battles_ppp\", battles_ppp, mpsz_adm1_owin, CONST_YEARS, CONST_QUARTERS)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_list(battles_ppp)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-35-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-35-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-35-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-35-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-35-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-35-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-35-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-35-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-35-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-35-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-35-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-35-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-35-14.png){width=672}\n:::\n:::\n\n\n## Deriving KDE layers for Event Types\n\n### Rescaling unit measurement to km\n\nIn the code chunk below, the helper function is used to covert the unit of measurement from meter to kilometer.\n\n#### Helper function to rescale unit measurement to km\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrescale_to_km <- function(data_list_name, ppp_list, years, quarters) {\n  # Initialize an empty list to store the results\n  event_data_list <- list()\n  \n  # Loop over the years and quarters to populate the list\n  for (year in years) {\n    for (quarter in quarters) {\n      if (year == 2024 && quarter > 2) next  # Skip quarters beyond Q2 for 2024\n      \n      # Construct the variable name dynamically\n      var_name <- paste0(year, \"_q\", quarter)\n      \n      # Get the event type data and store it in the list\n      event_data_list[[var_name]] <- rescale.ppp(ppp_list[[var_name]], 1000, \"km\")\n    }\n  }\n  \n  # Assign the populated list to the specified list name\n  assign(data_list_name, event_data_list, envir = .GlobalEnv)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrescale_to_km(\"violence_civilians_ppp_km\", violence_civilians_ppp, CONST_YEARS, CONST_QUARTERS)\nrescale_to_km(\"explosions_remote_violence_ppp_km\", explosions_remote_violence_ppp, CONST_YEARS, CONST_QUARTERS)\nrescale_to_km(\"strat_devs_ppp_km\", strat_devs_ppp, CONST_YEARS, CONST_QUARTERS)\nrescale_to_km(\"battles_ppp_km\", battles_ppp, CONST_YEARS, CONST_QUARTERS)\n```\n:::\n\n\n### Computing KDE layers for Event Types\n\nHelper function for computing KDE\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_process_kde <- function(data_list_name, ppp_list, years, quarters, kernel_type, sigma_type) {\n  # Initialize an empty list to store the results\n  event_data_list <- list()\n  \n  # Loop over the years and quarters to populate the list\n  for (year in years) {\n    for (quarter in quarters) {\n      if (year == 2024 && quarter > 2) next  # Skip quarters beyond Q2 for 2024\n      \n      # Construct the variable name dynamically\n      var_name <- paste0(year, \"_q\", quarter)\n      \n      # Get the event type data and store it in the list\n      event_data_list[[var_name]] = density(\n        ppp_list[[var_name]],\n        sigma = sigma_type,\n        edge = TRUE,\n        kernel = kernel_type,\n        main = paste(year, \"Q\", quarter)\n      )\n    }\n  }\n  \n  # Assign the populated list to the specified list name\n  assign(data_list_name, event_data_list, envir = .GlobalEnv)\n}\n```\n:::\n\n\n> I have tried using automatic bandwidth selection methods however, due to the performance limitations of my computer, it took extremely long to compute every single data.\n>\n> My alternative solution is to play around using fixed bandwidth, and the value of 10 seemed to give a decent visualisation of the plots.\n\n::: panel-tabset\n### Violence Against Civilians\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsigma_value <- 10\n\nhelper_func_process_kde(\n  \"kde_list_violence_civilians\",\n  violence_civilians_ppp_km,\n  CONST_YEARS, \n  CONST_QUARTERS, \n  \"gaussian\", \n  sigma_value\n)\n```\n:::\n\n\n### Explosion & Remote Violence\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsigma_value <- 10\n\nhelper_func_process_kde(\n  \"kde_list_explosions_remote_violence\",\n  explosions_remote_violence_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS,\n  \"gaussian\",\n  sigma_value\n)\n```\n:::\n\n\n### Strategic Developments\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsigma_value <- 10\n\nhelper_func_process_kde(\n  \"kde_list_strat_devs\",\n  strat_devs_ppp_km,\n  CONST_YEARS,\n  CONST_QUARTERS,\n  \"gaussian\",\n  sigma_value\n)\n```\n:::\n\n\n### Battles\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsigma_value <- 10\n\nhelper_func_process_kde(\n  \"kde_list_battles\",\n  battles_ppp_km,\n  CONST_YEARS, \n  CONST_QUARTERS, \n  \"gaussian\", \n  sigma_value\n)\n```\n:::\n\n:::\n\n### Visualising KDE Layers\n\nHelper function for plotting the KDE Layers\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_kde_list <- function(kde_list, xlab = \"Distance (km)\", ylab = \"Density\") {\n  for (name in names(kde_list)) {\n    plot(kde_list[[name]], main = name, xlab = xlab, ylab = ylab)\n  }\n}\n```\n:::\n\n\n::: panel-tabset\n### Violence Against Civilians\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_kde_list(kde_list_violence_civilians)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-44-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-44-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-44-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-44-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-44-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-44-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-44-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-44-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-44-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-44-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-44-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-44-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-44-14.png){width=672}\n:::\n:::\n\n\n### Explosions/Remote Violence\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_kde_list(kde_list_violence_civilians)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-45-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-45-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-45-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-45-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-45-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-45-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-45-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-45-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-45-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-45-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-45-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-45-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-45-14.png){width=672}\n:::\n:::\n\n\n### Strategic Developments\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_kde_list(kde_list_strat_devs)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-46-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-46-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-46-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-46-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-46-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-46-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-46-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-46-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-46-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-46-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-46-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-46-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-46-14.png){width=672}\n:::\n:::\n\n\n### Battles\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_kde_list(kde_list_battles)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-47-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-47-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-47-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-47-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-47-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-47-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-47-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-47-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-47-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-47-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-47-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-47-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-47-14.png){width=672}\n:::\n:::\n\n:::\n\n### KDE Insights\n\nBased on the above KDE layers, it shows that there is always a concentration in each plot of heatmap that starts of in Sagaing state of Myanmar then it radiates to other states, and Q3 of year 2023 has the highest intensity in the map.\n\n## 2nd-order spatial point patterns analysis\n\nNext, we will conduct our 2nd-order spatial point patterns analysis. But the computation levels and requirements will increase significantly. Hence, they are more appropriate for local view such as at the state level.\n\nIn that case, let us find which state has the most number of occurrences in the acled_sf variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary <- acled_sf %>%\n  group_by(admin1) %>%\n  summarise(count = n()) %>%\n  arrange(desc(count))\n\nsummary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 18 features and 2 fields\nGeometry type: MULTIPOINT\nDimension:     XY\nBounding box:  xmin: -208804.4 ymin: 1103500 xmax: 640934.5 ymax: 3042960\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 18 × 3\n   admin1      count                                                    geometry\n   <chr>       <int>                                            <MULTIPOINT [m]>\n 1 Sagaing     14043 ((-16397.05 2576482), (-13816.45 2549666), (-13808.2 25332…\n 2 Mandalay     5047 ((68129.21 2320839), (69197.66 2321843), (69550.81 2329036…\n 3 Magway       4585 ((-14448.48 2310133), (-11811.97 2503484), (-11778.42 2331…\n 4 Yangon       3893 ((148595 1924891), (149693.3 1924406), (161280.2 1841113),…\n 5 Shan-North   3435 ((217854 2555977), (229100.8 2553686), (237609.2 2472369),…\n 6 Kachin       3198 ((195339.5 2804590), (203637.2 2823909), (208746.8 2822422…\n 7 Tanintharyi  2850 ((383968.4 1610809), (384739.6 1614423), (389620.5 1590573…\n 8 Rakhine      2343 ((-208804.4 2357274), (-207135 2358896), (-206931.7 235949…\n 9 Kayin        1992 ((233276 2137205), (235185 2133257), (236637.1 2129658), (…\n10 Mon          1878 ((274988.3 1941700), (275098 1944865), (275324.9 1930892),…\n11 Chin         1742 ((-156265.4 2407840), (-152350.3 2435531), (-151082.3 2423…\n12 Shan-South   1534 ((221551.2 2321401), (229883.3 2328254), (231506.5 2346187…\n13 Bago-East    1400 ((196713.9 2122389), (204976.2 2126874), (207611 2124472),…\n14 Kayah        1398 ((279858.3 2139472), (283918.5 2160815), (285121.8 2165750…\n15 Ayeyarwady   1062 ((-1808.855 1832416), (1429.168 1776303), (1438.857 183487…\n16 Bago-West     718 ((78145.15 2073712), (79398.46 2070678), (81116.12 2070440…\n17 Nay Pyi Taw   340 ((168739.4 2244682), (180557.3 2184994), (180562.1 2184673…\n18 Shan-East      95 ((489266.8 2244252), (502198.1 2360984), (526697.7 2270740…\n```\n\n\n:::\n:::\n\n\nBased on the summary data above, Sagaing has the most number of counts in the entire acled_sf data. So let us filter down the data to related to Sagaing.\n\nHelper functions Filter by state\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCOUNTRY_STATE <- \"Sagaing\"\n\nget_quarter_data_by_state <- function(data, state_arg, event_type_arg) {\n  # Filter the data based on the specified event_type\n  filtered_data <- data %>%\n    group_by(admin1) %>%\n    filter(\n      (admin1 == state_arg) &\n      (event_type == event_type_arg)\n    ) %>%\n    select(Quarter_num)\n  \n  # Return the filtered data\n  return(filtered_data)\n}\n\npopulate_quarter_data_by_state <- function(event_type, data_list_name, years, quarters, country_state) {\n  # Initialize an empty list to store the results\n  event_data_list <- list()\n  \n  # Loop over the years and quarters to populate the list\n  for (year in years) {\n    for (quarter in quarters) {\n      if (year == 2024 && quarter > 2) next  # Skip quarters beyond Q2 for 2024\n      \n      # Construct the variable name dynamically\n      var_name <- paste0(year, \"_q\", quarter)\n      data_var_name <- paste0(\"acled_sf_\", year, \"_q\", quarter)\n      \n      # Get the event type data and store it in the list\n      event_data_list[[var_name]] <- get_quarter_data_by_state(\n        get(data_var_name),\n        country_state,\n        event_type\n      )\n    }\n  }\n  \n  # Assign the populated list to the specified list name\n  assign(data_list_name, event_data_list, envir = .GlobalEnv)\n}\n```\n:::\n\n\nNow let us generate a list of data for each event types in Sagaing.\n\n::: panel-tabset\n### Violence Against Civilians\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopulate_quarter_data_by_state(\n  event_types[\"VIOLENCE_CIVILIANS\"], \n  \"violence_civilians_state_sf\",\n  CONST_YEARS, \n  CONST_QUARTERS, \n  COUNTRY_STATE\n)\n```\n:::\n\n\n### Explosions/Remote Violence\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopulate_quarter_data_by_state(\n  event_types[\"EXPLOSIONS_REMOTE_VIOLENCE\"], \n  \"explosions_remote_violence_state_sf\",\n  CONST_YEARS, \n  CONST_QUARTERS, \n  COUNTRY_STATE\n)\n```\n:::\n\n\n### Strategic Developments\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopulate_quarter_data_by_state(\n  event_types[\"STRAT_DEVS\"], \n  \"strat_devs_state_sf\",\n  CONST_YEARS, \n  CONST_QUARTERS, \n  COUNTRY_STATE\n)\n```\n:::\n\n\n### Battles\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopulate_quarter_data_by_state(\n  event_types[\"BATTLES\"], \n  \"battles_state_sf\",\n  CONST_YEARS, \n  CONST_QUARTERS, \n  COUNTRY_STATE\n)\n```\n:::\n\n:::\n\n### Convert to PPP from sf\n\nBefore we can perform our 2nd Order spacial point patterns analysis, we'll need to convert our sf data of Sagaing into ppp format.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconvert_to_ppp(\"violence_civilians_state_ppp\", violence_civilians_state_sf, CONST_YEARS, CONST_QUARTERS)\nconvert_to_ppp(\"explosions_remote_violence_state_ppp\", explosions_remote_violence_state_sf, CONST_YEARS, CONST_QUARTERS)\nconvert_to_ppp(\"strat_devs_state_ppp\", strat_devs_state_sf, CONST_YEARS, CONST_QUARTERS)\nconvert_to_ppp(\"battles_state_ppp\", battles_state_sf, CONST_YEARS, CONST_QUARTERS)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(violence_civilians_state_ppp[[\"2021_q1\"]])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"ppp\"\n```\n\n\n:::\n:::\n\n\n### Removing duplicated ppp points\n\nWe also need to remove any possible duplicates in the list of data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_state_ppp[[\"2021_q1\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_state_ppp[[\"2021_q2\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_state_ppp[[\"2021_q3\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_state_ppp[[\"2021_q4\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_state_ppp[[\"2022_q1\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_state_ppp[[\"2022_q2\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_state_ppp[[\"2022_q3\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_state_ppp[[\"2022_q4\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_state_ppp[[\"2023_q1\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_state_ppp[[\"2023_q2\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_state_ppp[[\"2023_q3\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_state_ppp[[\"2023_q4\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_state_ppp[[\"2024_q1\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(violence_civilians_state_ppp[[\"2024_q2\"]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nremove_duplicates(\"violence_civilians_state_ppp\", violence_civilians_ppp, CONST_YEARS, CONST_QUARTERS)\nremove_duplicates(\"explosions_remote_violence_state_ppp\", explosions_remote_violence_ppp, CONST_YEARS, CONST_QUARTERS)\nremove_duplicates(\"strat_devs_state_ppp\", strat_devs_ppp, CONST_YEARS, CONST_QUARTERS)\nremove_duplicates(\"battles_state_ppp\", battles_ppp, CONST_YEARS, CONST_QUARTERS)\n```\n:::\n\n\nNow we also need to make sure of unit of measurement is in kilometres too.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrescale_to_km(\"violence_civilians_state_ppp_km\", violence_civilians_state_ppp, CONST_YEARS, CONST_QUARTERS)\nrescale_to_km(\"explosions_remote_violence_state_ppp_km\", explosions_remote_violence_state_ppp, CONST_YEARS, CONST_QUARTERS)\nrescale_to_km(\"strat_devs_state_ppp_km\", strat_devs_state_ppp, CONST_YEARS, CONST_QUARTERS)\nrescale_to_km(\"battles_state_ppp_km\", battles_state_ppp, CONST_YEARS, CONST_QUARTERS)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nviolence_civilians_state_ppp_km[[\"2021_q1\"]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern: 137 points\nmarks are numeric, of storage type  'integer'\nwindow: polygonal boundary\nenclosing rectangle: [-210.0086, 724.6476] x [1072.0263, 3158.4671] km\n```\n\n\n:::\n:::\n\n\n### Analysing Spatial Point Process Using F function\n\nThe F function estimates the empty space function F(r) or its hazard rate h(r) from a point pattern in a window of arbitrary shape.\n\nWe will compute F-function estimation by using Fest() of spatstat package, and also perform monte carlo simulation test using envelope() of spatstat package.\n\n#### Helper functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_2nd_order_spa <- function(Fest, data_list_name, ppp_list, years, quarters) {\n  # Initialize an empty list to store the results\n  event_data_list <- list()\n  \n  # Loop over the years and quarters to populate the list\n  for (year in years) {\n    for (quarter in quarters) {\n      if (year == 2024 && quarter > 2) next  # Skip quarters beyond Q2 for 2024\n      \n      # Construct the variable name dynamically\n      var_name <- paste0(year, \"_q\", quarter)\n      \n      # Get the event type data and store it in the list\n      event_data_list[[var_name]] = Fest(ppp_list[[var_name]])\n    }\n  }\n  \n  # Assign the populated list to the specified list name\n  assign(data_list_name, event_data_list, envir = .GlobalEnv)\n}\n\nenvelope_2nd_order_spa <- function(Fest, data_list_name, ppp_list, years, quarters) {\n  # Initialize an empty list to store the results\n  event_data_list <- list()\n  \n  # Loop over the years and quarters to populate the list\n  for (year in years) {\n    for (quarter in quarters) {\n      if (year == 2024 && quarter > 2) next  # Skip quarters beyond Q2 for 2024\n      \n      # Construct the variable name dynamically\n      var_name <- paste0(year, \"_q\", quarter)\n      \n      # Get the event type data and store it in the list\n      event_data_list[[var_name]] <- envelope(ppp_list[[var_name]], Fest, nsim = 40)\n    }\n  }\n  \n  # Assign the populated list to the specified list name\n  assign(data_list_name, event_data_list, envir = .GlobalEnv)\n}\n```\n:::\n\n\n::: panel-tabset\n### Violence Against Civilians\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_2nd_order_spa(\n  Fest, \n  \"F_violence_civilians_state_ppp_km\", \n  violence_civilians_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n)\n\nenvelope_2nd_order_spa(\n  Fest, \n  \"F_violence_civilians_state_ppp_km_csr\", \n  violence_civilians_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\n```\n\n\n:::\n:::\n\n\n### Explosions/Remote Violence\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_2nd_order_spa(\n  Fest, \n  \"F_explosions_remote_violence_state_ppp_km\", \n  explosions_remote_violence_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n)\n\nenvelope_2nd_order_spa(\n  Fest, \n  \"F_explosions_remote_violence_state_ppp_km_csr\", \n  explosions_remote_violence_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\n```\n\n\n:::\n:::\n\n\n### Strategic Developments\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_2nd_order_spa(\n  Fest, \n  \"F_strat_devs_state_ppp_km\", \n  strat_devs_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n)\n\nenvelope_2nd_order_spa(\n  Fest, \n  \"F_strat_devs_state_ppp_km_csr\", \n  strat_devs_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3,\n [3:16 remaining] 4,  [3:08 remaining] 5,  [3:04 remaining] 6,\n [3:05 remaining] 7,  [2:43 remaining] 8,  [2:26 remaining] 9,\n [2:13 remaining] 10,  [2:02 remaining] 11,  [1:53 remaining] 12,\n [1:45 remaining] 13,  [1:38 remaining] 14,  [1:31 remaining] 15,\n [1:26 remaining] 16,  [1:20 remaining] 17,  [1:15 remaining] 18,\n [1:11 remaining] 19,  [1:10 remaining] 20,  [1:09 remaining] 21,\n [1:07 remaining] 22,  [1:05 remaining] 23,  [1:03 remaining] 24,\n [1:01 remaining] 25,  [1:00 remaining] 26,  [56 sec remaining] 27,\n [53 sec remaining] 28,  [50 sec remaining] 29,  [46 sec remaining] 30,\n [43 sec remaining] 31,  [39 sec remaining] 32,  [35 sec remaining] 33,\n [30 sec remaining] 34,  [25 sec remaining] 35,  [21 sec remaining] 36,\n [16 sec remaining] 37,  [12 sec remaining] 38,  [8 sec remaining] 39,\n [4 sec remaining] \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\n```\n\n\n:::\n:::\n\n\n### Battles\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_2nd_order_spa(\n  Fest, \n  \"F_battles_state_ppp_km\", \n  battles_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n)\n\nenvelope_2nd_order_spa(\n  Fest, \n  \"F_battles_state_ppp_km_csr\", \n  battles_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\n```\n\n\n:::\n:::\n\n:::\n\n### Plotting the data\n\nHelper function to plot the list of CSR data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_csr_list <- function(kde_list) {\n  for (name in names(kde_list)) {\n    plot(kde_list[[name]], main = name)\n  }\n}\n```\n:::\n\n\n::: panel-tabset\n### Violence Against Civilians\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_csr_list(F_violence_civilians_state_ppp_km_csr)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-66-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-66-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-66-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-66-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-66-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-66-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-66-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-66-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-66-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-66-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-66-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-66-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-66-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-66-14.png){width=672}\n:::\n:::\n\n\n### Explosions/Remote Violence\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_csr_list(F_explosions_remote_violence_state_ppp_km_csr)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-67-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-67-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-67-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-67-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-67-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-67-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-67-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-67-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-67-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-67-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-67-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-67-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-67-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-67-14.png){width=672}\n:::\n:::\n\n\n### Strategic Developments\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_csr_list(F_strat_devs_state_ppp_km_csr)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-68-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-68-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-68-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-68-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-68-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-68-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-68-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-68-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-68-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-68-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-68-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-68-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-68-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-68-14.png){width=672}\n:::\n:::\n\n\n### Battles\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_csr_list(F_battles_state_ppp_km_csr)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-69-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-69-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-69-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-69-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-69-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-69-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-69-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-69-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-69-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-69-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-69-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-69-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-69-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-69-14.png){width=672}\n:::\n:::\n\n:::\n\n### G Function\n\nThe G function measures the distribution of the distances from an arbitrary event to its nearest event.\n\nWe will compute G-function estimation by using Gest() of spatstat package and perform monte carlo simulation test using envelope() of spatstat package.\n\n::: panel-tabset\n### Violence Against Civilians\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_2nd_order_spa(\n  Gest, \n  \"G_violence_civilians_state_ppp_km\", \n  violence_civilians_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n)\n\nenvelope_2nd_order_spa(\n  Gest, \n  \"G_violence_civilians_state_ppp_km_csr\", \n  violence_civilians_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4,  [3:15 remaining] 5,  [2:56 remaining] 6,\n [2:37 remaining] 7,  [2:24 remaining] 8,  [2:13 remaining] 9,\n [2:04 remaining] 10,  [1:58 remaining] 11,  [1:51 remaining] 12,\n [1:45 remaining] 13,  [1:44 remaining] 14,  [1:40 remaining] 15,\n [1:34 remaining] 16,  [1:29 remaining] 17,  [1:25 remaining] 18,\n [1:20 remaining] 19,  [1:16 remaining] 20,  [1:12 remaining] 21,\n [1:08 remaining] 22,  [1:05 remaining] 23,  [1:03 remaining] 24,\n [59 sec remaining] 25,  [55 sec remaining] 26,  [51 sec remaining] 27,\n [47 sec remaining] 28,  [43 sec remaining] 29,  [40 sec remaining] 30,\n [36 sec remaining] 31,  [32 sec remaining] 32,  [29 sec remaining] 33,\n [25 sec remaining] 34,  [22 sec remaining] 35,  [18 sec remaining] 36,\n [14 sec remaining] 37,  [11 sec remaining] 38,  [7 sec remaining] 39,\n [4 sec remaining] \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\n```\n\n\n:::\n:::\n\n\n### Explosions/Remote Violence\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_2nd_order_spa(\n  Gest, \n  \"G_explosions_remote_violence_state_ppp_km\", \n  explosions_remote_violence_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n)\n\nenvelope_2nd_order_spa(\n  Gest, \n  \"G_explosions_remote_violence_state_ppp_km_csr\", \n  explosions_remote_violence_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\n```\n\n\n:::\n:::\n\n\n### Strategic Developments\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_2nd_order_spa(\n  Gest, \n  \"G_strat_devs_state_ppp_km\", \n  strat_devs_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n)\n\nenvelope_2nd_order_spa(\n  Gest, \n  \"G_strat_devs_state_ppp_km_csr\", \n  strat_devs_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3,\n [3:20 remaining] 4,  [2:59 remaining] 5,  [2:50 remaining] 6,\n [2:37 remaining] 7,  [2:29 remaining] 8,  [2:25 remaining] 9,\n [2:19 remaining] 10,  [2:17 remaining] 11,  [2:14 remaining] 12,\n [2:10 remaining] 13,  [2:04 remaining] 14,  [1:59 remaining] 15,\n [1:54 remaining] 16,  [1:48 remaining] 17,  [1:43 remaining] 18,\n [1:38 remaining] 19,  [1:34 remaining] 20,  [1:29 remaining] 21,\n [1:25 remaining] 22,  [1:20 remaining] 23,  [1:16 remaining] 24,\n [1:12 remaining] 25,  [1:07 remaining] 26,  [1:02 remaining] 27,\n [58 sec remaining] 28,  [53 sec remaining] 29,  [49 sec remaining] 30,\n [44 sec remaining] 31,  [40 sec remaining] 32,  [35 sec remaining] 33,\n [31 sec remaining] 34,  [26 sec remaining] 35,  [22 sec remaining] 36,\n [18 sec remaining] 37,  [13 sec remaining] 38,  [9 sec remaining] 39,\n [4 sec remaining] \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\n```\n\n\n:::\n:::\n\n\n### Battles\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_2nd_order_spa(\n  Gest, \n  \"G_battles_state_ppp_km\", \n  battles_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n)\n\nenvelope_2nd_order_spa(\n  Gest, \n  \"G_battles_state_ppp_km_csr\", \n  battles_state_ppp_km, \n  CONST_YEARS, \n  CONST_QUARTERS\n )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2,  [3:21 remaining] 3,\n [3:14 remaining] 4,  [3:09 remaining] 5,  [3:03 remaining] 6,\n [3:03 remaining] 7,  [2:56 remaining] 8,  [2:50 remaining] 9,\n [2:44 remaining] 10,  [2:40 remaining] 11,  [2:33 remaining] 12,\n [2:25 remaining] 13,  [2:19 remaining] 14,  [2:12 remaining] 15,\n [2:06 remaining] 16,  [1:59 remaining] 17,  [1:54 remaining] 18,\n [1:48 remaining] 19,  [1:42 remaining] 20,  [1:37 remaining] 21,\n [1:32 remaining] 22,  [1:28 remaining] 23,  [1:23 remaining] 24,\n [1:18 remaining] 25,  [1:13 remaining] 26,  [1:08 remaining] 27,\n [1:03 remaining] 28,  [58 sec remaining] 29,  [53 sec remaining] 30,\n [48 sec remaining] 31,  [43 sec remaining] 32,  [39 sec remaining] 33,\n [34 sec remaining] 34,  [30 sec remaining] 35,  [25 sec remaining] 36,\n [19 sec remaining] 37,  [15 sec remaining] 38,  [10 sec remaining] 39,\n [5 sec remaining] \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\nGenerating 40 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40.\n\nDone.\n```\n\n\n:::\n:::\n\n:::\n\n::: panel-tabset\n### Violence Against Civilians\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_csr_list(G_violence_civilians_state_ppp_km_csr)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-74-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-74-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-74-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-74-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-74-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-74-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-74-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-74-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-74-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-74-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-74-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-74-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-74-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-74-14.png){width=672}\n:::\n:::\n\n\n### Explosions/Remote Violence\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_csr_list(G_explosions_remote_violence_state_ppp_km_csr)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-75-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-75-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-75-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-75-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-75-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-75-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-75-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-75-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-75-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-75-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-75-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-75-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-75-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-75-14.png){width=672}\n:::\n:::\n\n\n### Strategic Developments\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_csr_list(G_strat_devs_state_ppp_km_csr)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-76-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-76-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-76-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-76-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-76-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-76-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-76-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-76-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-76-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-76-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-76-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-76-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-76-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-76-14.png){width=672}\n:::\n:::\n\n\n### Battles\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelper_func_plot_csr_list(G_battles_state_ppp_km_csr)\n```\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-77-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-77-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-77-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-77-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-77-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-77-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-77-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-77-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-77-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-77-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-77-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-77-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-77-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-77-14.png){width=672}\n:::\n:::\n\n:::\n\n### 2nd-Order Spacial Point Patterns Analysis Insights\n\nBased on the above plots of F and G functions, there is a clustering of points in the dataset. This means that the points are closer to each other that what would be expected under a random distribution.\n\n### Spatio-temporal KDE layers for Event Types\n\nA spatio-temporal point process (also called space-time or spatial-temporal point process) is a random collection of points, where each point represents the time and location of an event. Examples of events include incidence of disease, sightings or births of a species, or the occurrences of fires, earthquakes, lightning strikes, tsunamis, or volcanic eruptions.\n\nThe analysis of spatio-temporal point patterns is becoming increasingly necessary, given the rapid emergence of geographically and temporally indexed data in a wide range of fields. Several spatio-temporal point patterns analysis methods have been introduced and implemented in R in the last ten years.\n\n#### Helper function for computing spatial-temporal KDE\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde <- function(acled_sf, year_arg, event_type_arg, mpsz_adm1_owin, plot_title_arg) {\n  # Filter and prepare the data\n  event_type_quarters_combined <- acled_sf %>% \n    filter(year == year_arg & event_type == event_type_arg) %>%\n    select(Quarter_num) %>%\n    as.ppp()\n  \n  # Create a point pattern and apply jitter\n  event_type_quarters_combined_ppp <- rjitter(as.ppp(event_type_quarters_combined), retry=TRUE, nsim=1, drop=TRUE)\n  \n  # Mask the point pattern with the window\n  event_type_quarters_combined_ppp_owin <- event_type_quarters_combined_ppp[mpsz_adm1_owin]\n  \n  # Calculate the space-time kernel density estimate\n  stkde_event_type_data <- spattemp.density(event_type_quarters_combined_ppp_owin)\n  \n  # Print summary\n  print(summary(stkde_event_type_data))\n  \n  # Plot the results\n  par(mfcol=c(2, 3))\n  tims <- c(1, 2, 3, 4)\n  for (i in tims) { \n    if (year_arg == 2024 && i > 2) next\n    plot(stkde_event_type_data, i, \n         override.par=FALSE, \n         fix.range=TRUE, \n         main=paste(plot_title_arg, year_arg, \"Q\", i))\n  }\n}\n```\n:::\n\n\n::: panel-tabset\n### Violence Against Civilians\n\n### Violence Against Civilians in Year 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(\n  acled_sf_2021, \n  2021, \n  event_types[\"VIOLENCE_CIVILIANS\"], \n  mpsz_adm1_owin, \n  \"STKDE on Violence Against Civilians in\"\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 68653.17 (spatial)\n  lambda = 0.0052 (temporal)\n\nNo. of observations\n  1863 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 4]\n\nEvaluation\n  128 x 128 x 4 trivariate lattice\n  Density range: [2.201336e-17, 4.548589e-10]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-79-1.png){width=1728}\n:::\n:::\n\n\n### Violence Against Civilians in Year 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(acled_sf_2022, 2022, event_types[\"VIOLENCE_CIVILIANS\"], mpsz_adm1_owin, \"STKDE on Violence Against Civilians in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 73915.22 (spatial)\n  lambda = 0.0039 (temporal)\n\nNo. of observations\n  2009 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 4]\n\nEvaluation\n  128 x 128 x 4 trivariate lattice\n  Density range: [3.388548e-15, 3.76366e-10]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-80-1.png){width=1728}\n:::\n:::\n\n\n### Violence Against Civilians in Year 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(acled_sf_2023, 2023, event_types[\"VIOLENCE_CIVILIANS\"], mpsz_adm1_owin, \"STKDE on Violence Against Civilians in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 66199.04 (spatial)\n  lambda = 0.0085 (temporal)\n\nNo. of observations\n  1646 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 4]\n\nEvaluation\n  128 x 128 x 4 trivariate lattice\n  Density range: [9.447994e-18, 2.472184e-10]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-81-1.png){width=1728}\n:::\n:::\n\n\n### Violence Against Civilians in Year 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(acled_sf_2024, 2024, event_types[\"VIOLENCE_CIVILIANS\"], mpsz_adm1_owin, \"STKDE on Violence Against Civilians in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 85036.53 (spatial)\n  lambda = 0.0042 (temporal)\n\nNo. of observations\n  631 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 2]\n\nEvaluation\n  128 x 128 x 2 trivariate lattice\n  Density range: [6.885204e-14, 5.588596e-10]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-82-1.png){width=1728}\n:::\n:::\n\n\n### Explosion & Remote Violence\n\nExplosion and Remove Violence in Year 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(acled_sf_2021, 2021, event_types[\"EXPLOSIONS_REMOTE_VIOLENCE\"], mpsz_adm1_owin, \"STKDE on Explosion & Remote Violence in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 64492.56 (spatial)\n  lambda = 0.0033 (temporal)\n\nNo. of observations\n  2675 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 4]\n\nEvaluation\n  128 x 128 x 4 trivariate lattice\n  Density range: [1.232502e-34, 1.148083e-09]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-83-1.png){width=1728}\n:::\n:::\n\n\nExplosion & Remote Violence in Year 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(acled_sf_2022, 2022, event_types[\"EXPLOSIONS_REMOTE_VIOLENCE\"], mpsz_adm1_owin, \"STKDE on Explosion & Remote Violence in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 63373.76 (spatial)\n  lambda = 0.0047 (temporal)\n\nNo. of observations\n  3668 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 4]\n\nEvaluation\n  128 x 128 x 4 trivariate lattice\n  Density range: [4.611696e-19, 4.201904e-10]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-84-1.png){width=1728}\n:::\n:::\n\n\nExplosion and Remove Violence in Year 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(acled_sf_2023, 2023, event_types[\"EXPLOSIONS_REMOTE_VIOLENCE\"], mpsz_adm1_owin, \"STKDE on Explosion & Remote Violence in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 65917.67 (spatial)\n  lambda = 0.0048 (temporal)\n\nNo. of observations\n  3653 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 4]\n\nEvaluation\n  128 x 128 x 4 trivariate lattice\n  Density range: [1.198038e-17, 3.967316e-10]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-85-1.png){width=1728}\n:::\n:::\n\n\nExplosion and Remove Violence in Year 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(acled_sf_2024, 2024, event_types[\"EXPLOSIONS_REMOTE_VIOLENCE\"], mpsz_adm1_owin, \"STKDE on Explosion & Remote Violence in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 75483.47 (spatial)\n  lambda = 0.0018 (temporal)\n\nNo. of observations\n  2072 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 2]\n\nEvaluation\n  128 x 128 x 2 trivariate lattice\n  Density range: [2.097493e-15, 1.970739e-09]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-86-1.png){width=1728}\n:::\n:::\n\n\n### Strategic Developments\n\nStrategic Developments in Year 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(acled_sf_2021, 2021, event_types[\"STRAT_DEVS\"], mpsz_adm1_owin, \"STKDE on Strategic Developments in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 63831.01 (spatial)\n  lambda = 0.0037 (temporal)\n\nNo. of observations\n  3381 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 4]\n\nEvaluation\n  128 x 128 x 4 trivariate lattice\n  Density range: [6.909365e-15, 5.347878e-10]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-87-1.png){width=1728}\n:::\n:::\n\n\nStrategic Developments in Year 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(acled_sf_2022, 2022, event_types[\"STRAT_DEVS\"], mpsz_adm1_owin, \"STKDE on Strategic Developments in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 55149.53 (spatial)\n  lambda = 0.0022 (temporal)\n\nNo. of observations\n  4312 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 4]\n\nEvaluation\n  128 x 128 x 4 trivariate lattice\n  Density range: [1.203656e-18, 9.088899e-10]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-88-1.png){width=1728}\n:::\n:::\n\n\nStrategic Developments in Year 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(acled_sf_2023, 2023, event_types[\"STRAT_DEVS\"], mpsz_adm1_owin, \"STKDE on Strategic Developments in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 61941.92 (spatial)\n  lambda = 0.0054 (temporal)\n\nNo. of observations\n  3115 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 4]\n\nEvaluation\n  128 x 128 x 4 trivariate lattice\n  Density range: [1.585971e-18, 5.045853e-10]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-89-1.png){width=1728}\n:::\n:::\n\n\nStrategic Developments in Year 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(acled_sf_2024, 2024, event_types[\"STRAT_DEVS\"], mpsz_adm1_owin, \"STKDE on Strategic Developments in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 72805.04 (spatial)\n  lambda = 0.0026 (temporal)\n\nNo. of observations\n  1145 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 2]\n\nEvaluation\n  128 x 128 x 2 trivariate lattice\n  Density range: [3.368086e-14, 1.294003e-09]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-90-1.png){width=1728}\n:::\n:::\n\n\n### Battles\n\nBattles in Year 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(acled_sf_2021, 2021, event_types[\"BATTLES\"], mpsz_adm1_owin, \"STKDE on Battles in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 69194.75 (spatial)\n  lambda = 0.0047 (temporal)\n\nNo. of observations\n  2193 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 4]\n\nEvaluation\n  128 x 128 x 4 trivariate lattice\n  Density range: [9.43846e-21, 4.51969e-10]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-91-1.png){width=1728}\n:::\n:::\n\n\nBattles in Year 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(acled_sf_2022, 2022, event_types[\"BATTLES\"], mpsz_adm1_owin, \"STKDE on Battles in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 64303.87 (spatial)\n  lambda = 0.0043 (temporal)\n\nNo. of observations\n  3787 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 4]\n\nEvaluation\n  128 x 128 x 4 trivariate lattice\n  Density range: [2.630951e-17, 3.435047e-10]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-92-1.png){width=1728}\n:::\n:::\n\n\nBattles in Year 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(acled_sf_2023, 2023, event_types[\"BATTLES\"], mpsz_adm1_owin, \"STKDE on Battles in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 67073.04 (spatial)\n  lambda = 0.0042 (temporal)\n\nNo. of observations\n  3944 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 4]\n\nEvaluation\n  128 x 128 x 4 trivariate lattice\n  Density range: [6.109086e-17, 5.752058e-10]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-93-1.png){width=1728}\n:::\n:::\n\n\nBattles in Year 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_stkde(acled_sf_2024, 2024, event_types[\"BATTLES\"], mpsz_adm1_owin, \"STKDE on Battles in\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 78864.27 (spatial)\n  lambda = 0.0019 (temporal)\n\nNo. of observations\n  1966 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 2]\n\nEvaluation\n  128 x 128 x 2 trivariate lattice\n  Density range: [2.097587e-15, 1.722009e-09]\nNULL\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome_1_files/figure-html/unnamed-chunk-94-1.png){width=1728}\n:::\n:::\n\n:::\n\n## Conclusions\n\nThe ACLED Myanmar dataset definitely holds some interesting insights on how the intensity of each event spreads across to various regions of the country, indicating which state has the most active conflicts going on while allowing us to know which part of Myanmar travelers should steer clear of for their safety.\n\n## Personal Learnings\n\nI would have to admit that this exercise has been really challenging and could also be very time-consuming as well due to the speed performance limitations of my computer. Despite all of that, it has also challenged me to find ways to handle an extremely large data set for the first time, making sure that I should plan ahead on what I want to analyse first before writing the code for it. \\\n\\\nI believe that the remaining take-home exercises would be more manageable after rigorous and technical experience gained from this take-home exercise.\n",
    "supporting": [
      "takehome_1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}