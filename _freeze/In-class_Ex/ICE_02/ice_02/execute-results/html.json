{
  "hash": "6ad106475f2b2f69a44716737898acc2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 2\"\nauthor: \"Javier Lian\"\nexecute:\n    freeze: true\n---\n\n\n## Working with Master Plan 2019 Subzone Boundary Data\n\n::: panel-tabset\n### Tasks\n\n1.  Create a sub folder called data in In-class_Ex02 folder\n\n2.  If necessary visit data.gov.sg and download \"Master Plan 2024 Subzone Boundary (web)\" from the portal. You are required to download the ESRI shapefile and kml file.\n\n3.  Type the code chunk to import the \"Master Plan 2024 Subzone Boundary (web)\" shapefile and kml file, save them in sf simple features data frame.\n\n### Code\n\n::: \\[style = \"fontsize: 1.5em\"\\]\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse)\n```\n:::\n\n\nThis code chunk imports shape file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz14_shp <- st_read(\n  dsn = \"data/geospatial\",\n  layer = \"MP14_SUBZONE_WEB_PL\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\javilian98\\IS415-GAA\\In-class_Ex\\ICE_02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\nThis code chunk imports kml file (error).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(mpsz14_shp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sf\"         \"data.frame\"\n```\n\n\n:::\n\n```{.r .cell-code}\n#| eval: false\nmpsz14_kml <- st_read(\"data/aspatial/MasterPlan2014SubzoneBoundaryWebKML.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MasterPlan2014SubzoneBoundaryWebKML' from data source \n  `C:\\javilian98\\IS415-GAA\\In-class_Ex\\ICE_02\\data\\aspatial\\MasterPlan2014SubzoneBoundaryWebKML.kml' \n  using driver `KML'\nSimple feature collection with 323 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n## Method for Resolving MasterPlan2014 kml File Error\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_write(\n  mpsz14_shp,\n  \"data/aspatial/MasterPlan2014SubzoneBoundaryWebKML.kml\",\n  delete_dsn = TRUE\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDeleting source `data/aspatial/MasterPlan2014SubzoneBoundaryWebKML.kml' using driver `KML'\nWriting layer `MasterPlan2014SubzoneBoundaryWebKML' to data source \n  `data/aspatial/MasterPlan2014SubzoneBoundaryWebKML.kml' using driver `KML'\nWriting 323 features with 15 fields and geometry type Multi Polygon.\n```\n\n\n:::\n:::\n\n:::\n\n## Working with Master Plan 2019 Subzone Boundary Data\n\n::: panel-tabset\n### Task\n\n1.  Visit data.gov.sg and download Master Plan 2019 Subzone Boundary (No Sea) from the portal. You are required to download both kml files.\n\n2.  Move MPSZ-2019 shapefile provided for In-Class Exercise 1 folder on elearn to data sub-folder of In-Class_Ex02.\n\n3.  Write a code chunk to import Master Plan 2019 Subzone Boundary (No Sea) kml and MPSZ-2019 into sf simple feature data.frame.\n\n### Import Shapefile\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp <- st_read(\n  dsn = \"data/geospatial\",\n  layer = \"MP14_SUBZONE_WEB_PL\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\javilian98\\IS415-GAA\\In-class_Ex\\ICE_02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\n### Import kml\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_kml <- st_read(\n  \"data/aspatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `C:\\javilian98\\IS415-GAA\\In-class_Ex\\ICE_02\\data\\aspatial\\MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n:::\n\n::: panel-tabset\n### Import MPSZ-19 Shape\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp <- st_read(\n  dsn = \"data/geospatial\",\n  layer = \"MPSZ-2019\"\n) %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `C:\\javilian98\\IS415-GAA\\In-class_Ex\\ICE_02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n:::\n\n## Working with Population Data\n\n::: panel-tabset\n### Task\n\n1.  Read the csv data into a variable popdata \\### Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata <- read_csv(\"data/aspatial/respopagesextod2023.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 100928 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n:::\n\n## Data Wrangling\n\n::: panel-tabset\n### Task\n\n1.  Write a code chunk to prpare a data frame showing population by Planning Area and Planning Subzone.\n\n### Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup() %>%\n  pivot_wider(\n    names_from = AG,\n    values_from = POP\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\ncolnames(popdata2023)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"PA\"          \"SZ\"          \"0_to_4\"      \"10_to_14\"    \"15_to_19\"   \n [6] \"20_to_24\"    \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"   \n[11] \"45_to_49\"    \"50_to_54\"    \"55_to_59\"    \"5_to_9\"      \"60_to_64\"   \n[16] \"65_to_69\"    \"70_to_74\"    \"75_to_79\"    \"80_to_84\"    \"85_to_89\"   \n[21] \"90_and_Over\"\n```\n\n\n:::\n:::\n\n:::\n\n## Joining popdata2023 and mpsz19_shp\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata2023 %>%\n  mutate_at(\n    .vars = vars(PA, SZ), \n    .funs = list(toupper) \n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npop2023_mpsz <- left_join(popdata2023, mpsz19_shp, by = c(\"SZ\" = \"SUBZONE_N\"))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}